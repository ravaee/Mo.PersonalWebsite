@page "/Articles/{slug}"
@model Mo.PersonalWebsite.Pages.Articles.DetailModel
@{
    ViewData["Title"] = Model.Article?.Title ?? "Article Not Found";
}

@if (Model.Article != null)
{
    <div class="article-page">
        <div class="container">
            <!-- Breadcrumb -->
            <nav class="breadcrumb-nav mb-4">
                <a href="/" class="breadcrumb-link">Home</a>
                <span class="breadcrumb-separator">/</span>
                <a href="/Articles" class="breadcrumb-link">Articles</a>
                <span class="breadcrumb-separator">/</span>
                <span class="breadcrumb-current">@Model.Article.Title</span>
            </nav>

            <!-- Article Container -->
            <div class="article-container">
                <!-- Article Header -->
                <header class="article-header">
                    <h1 class="article-title">@Model.Article.Title</h1>
                    <div class="article-meta">
                        <time class="article-date" datetime="@((Model.Article.PublishedAt ?? Model.Article.CreatedAt).ToString("yyyy-MM-dd"))">
                            @((Model.Article.PublishedAt ?? Model.Article.CreatedAt).ToString("MMMM dd, yyyy"))
                        </time>
                        @if (Model.Article.Category != null)
                        {
                            <span class="article-category">@Model.Article.Category.Name</span>
                        }
                    </div>
                </header>

                <!-- Article Content -->
                <div class="article-content">
                    @{
                        var cleanContent = Model.Article.Content;
                        // Remove p tags that contain only br tags and whitespace
                        cleanContent = System.Text.RegularExpressions.Regex.Replace(cleanContent, @"<p>\s*<br\s*/?>\s*</p>", "", System.Text.RegularExpressions.RegexOptions.IgnoreCase);
                        // Remove p tags that contain only whitespace and br tags (multiple br tags)
                        cleanContent = System.Text.RegularExpressions.Regex.Replace(cleanContent, @"<p>(\s*<br\s*/?>\s*)+</p>", "", System.Text.RegularExpressions.RegexOptions.IgnoreCase);
                    }
                    @Html.Raw(cleanContent)
                </div>

                <!-- Tags -->
                @if (Model.Article.ArticleTags.Any())
                {
                    <div class="article-tags">
                        @foreach (var articleTag in Model.Article.ArticleTags)
                        {
                            <span class="article-tag">@articleTag.Tag.Name</span>
                        }
                    </div>
                }

                <!-- Share Section -->
                <div class="article-share">
                    <h4 class="share-title">Share this article</h4>
                    <div class="share-buttons">
                        <a class="share-btn twitter" target="_blank" href="https://twitter.com/intent/tweet?text=@Uri.EscapeDataString(Model.Article.Title)&url=@Uri.EscapeDataString(Url.PageLink()!)">
                            <i class="bi bi-twitter-x"></i>
                        </a>
                        <a class="share-btn linkedin" target="_blank" href="https://www.linkedin.com/sharing/share-offsite/?url=@Uri.EscapeDataString(Url.PageLink()!)">
                            <i class="bi bi-linkedin"></i>
                        </a>
                        <button class="share-btn copy" onclick="copyToClipboard('@Url.PageLink()')">
                            <i class="bi bi-link-45deg"></i>
                        </button>
                    </div>
                </div>
            </div>

            @if (Model.RelatedArticles.Any())
            {
                <div class="related-articles">
                    <h3 class="related-title">Related Articles</h3>
                    <div class="related-grid">
                        @foreach (var relatedArticle in Model.RelatedArticles)
                        {
                            <div class="related-article">
                                <h4 class="related-article-title">
                                    <a href="/Articles/@relatedArticle.Slug">@relatedArticle.Title</a>
                                </h4>
                                @if (!string.IsNullOrEmpty(relatedArticle.MetaDescription))
                                {
                                    <p class="related-article-excerpt">@relatedArticle.MetaDescription</p>
                                }
                                <time class="related-article-date" datetime="@((relatedArticle.PublishedAt ?? relatedArticle.CreatedAt).ToString("yyyy-MM-dd"))">
                                    @((relatedArticle.PublishedAt ?? relatedArticle.CreatedAt).ToString("MMM dd, yyyy"))
                                </time>
                            </div>
                        }
                    </div>
                </div>
            }
        </div>
    </div>
}
else
{
    <div class="article-not-found">
        <div class="container">
            <div class="not-found-content">
                <h1 class="not-found-title">Article Not Found</h1>
                <p class="not-found-description">The article you're looking for doesn't exist or has been removed.</p>
                <a class="back-link" href="/Articles">
                    <i class="bi bi-arrow-left"></i>
                    <span>Browse All Articles</span>
                </a>
            </div>
        </div>
    </div>
}

<script>
    function copyToClipboard(text) {
        navigator.clipboard.writeText(text).then(function () {
            const btn = event.target.closest('.copy');
            const icon = btn.querySelector('i');
            
            // Show feedback
            icon.className = 'bi bi-check';
            btn.style.color = '#28a745';
            
            setTimeout(() => {
                icon.className = 'bi bi-link-45deg';
                btn.style.color = '';
            }, 2000);
        }).catch(function(err) {
            console.error('Failed to copy: ', err);
        });
    }
</script>
