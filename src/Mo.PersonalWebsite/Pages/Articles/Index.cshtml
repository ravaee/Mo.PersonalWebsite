@page
@model Mo.PersonalWebsite.Pages.Articles.ArticlesIndexModel
@{
    ViewData["Title"] = "Articles";
    ViewData["MetaDescription"] = "Browse through my latest articles and insights on software development, web technologies, and programming best practices.";
}

<!-- Compact Header & Filters Section -->
<section class="articles-header-section py-4">
    <div class="container">
        <h1 class="articles-title mb-1">Articles</h1>
        <p class="articles-subtitle mb-0">@Model.TotalArticles article@(Model.TotalArticles == 1 ? "" : "s") about software development</p>
    </div>
</section>

<!-- Categories & Tags Filter Section -->
<section class="filters-section py-3 bg-light">
    <div class="container">
        <div class="filters-container">
            <h6 class="filter-title mb-2">
        <i class="bi bi-folder2"></i> Categories
            </h6>
            <div class="filter-pills">
                @{
                    // Use all published articles to derive categories so counts don't change when a category filtered
                    var allCategories = Model.AllCategories
                        .OrderByDescending(c => c.Count);
                }
        <a href="/Articles" class="filter-pill @(string.IsNullOrWhiteSpace(Model.SelectedCategory) ? "active" : "")">All</a>
                @if (allCategories.Any())
                {
                    foreach (var c in allCategories.Where(cat => !string.IsNullOrEmpty(cat.Slug))) // Skip "All Articles" entry if present
                    {
            <a href="/Articles?category=@c.Slug" class="filter-pill @(Model.SelectedCategory == c.Slug ? "active" : "")">
                            @c.Name <span class="pill-count">@c.Count</span>
                        </a>
                    }
                }
                else
                {
                    <span class="text-muted small">No categories yet</span>
                }
            </div>
        </div>
    </div>
</section>

<!-- Articles Grid Section -->
<section class="articles-grid-section py-5">
    <div class="container">
        @if (Model.Articles.Any())
        {
            <div class="articles-grid">
                @foreach (var article in Model.Articles)
                {
                    <article class="article-card-enhanced">
                        
                        <!-- Article Thumbnail -->
                        <div class="article-thumbnail-container">
                            @{
                                var imgMatch = System.Text.RegularExpressions.Regex.Match(article.Content ?? "", @"<img[^>]+src=[""']([^""']+)[""'][^>]*>");
                                var imgUrl = imgMatch.Success ? imgMatch.Groups[1].Value : "/images/default-article.svg";
                            }
                            <img src="@imgUrl" 
                                 alt="@article.Title" 
                                 class="article-thumbnail-image"
                                 onerror="this.src='/images/default-article.svg'" />
                            
                            <!-- Article Date -->
                            <div class="article-date-overlay">
                                <span class="article-date">
                                    @((article.PublishedAt ?? article.CreatedAt).ToString("MMM dd"))
                                </span>
                            </div>
                            
                            <!-- Hover Overlay -->
                            <div class="article-hover-overlay">
                                <a href="/Articles/@article.Slug" class="article-quick-read">
                                    <i class="bi bi-arrow-right"></i>
                                </a>
                            </div>
                        </div>
                        
                        <!-- Article Content -->
                        <div class="article-content-enhanced">
                            <h2 class="article-title-enhanced">
                                <a href="/Articles/@article.Slug">@article.Title</a>
                            </h2>
                            
                            @if (!string.IsNullOrEmpty(article.MetaDescription))
                            {
                                <p class="article-excerpt-enhanced">
                                    @article.MetaDescription
                                </p>
                            }
                            
                            <!-- Article Category -->
                            <div class="article-category-info mb-3">
                                @if (article.Category != null)
                                {
                                    <a href="/Articles?category=@article.Category.Slug" class="category-badge">
                                        <i class="bi bi-folder2 me-1"></i>@article.Category.Name
                                    </a>
                                }
                                else
                                {
                                    <a href="/Articles?category=general" class="category-badge">
                                        <i class="bi bi-folder2 me-1"></i>General
                                    </a>
                                }
                            </div>
                            
                            <!-- Article Footer -->
                            <div class="article-footer-enhanced">
                                <div class="article-meta">
                                    <time datetime="@((article.PublishedAt ?? article.CreatedAt).ToString("yyyy-MM-dd"))" class="article-date-text">
                                        @((article.PublishedAt ?? article.CreatedAt).ToString("MMM dd, yyyy"))
                                    </time>
                                    <span class="reading-time">
                                        <i class="bi bi-clock"></i>
                                        @{
                                            var wordCount = article.Content?.Split(' ').Length ?? 0;
                                            var readingTime = Math.Max(1, wordCount / 200);
                                        }
                                        @readingTime min read
                                    </span>
                                </div>
                                <a href="/Articles/@article.Slug" class="read-more-enhanced">
                                    Read Article
                                    <i class="bi bi-arrow-right ms-1"></i>
                                </a>
                            </div>
                        </div>
                    </article>
                }
            </div>
            
            <!-- Pagination -->
            @if (Model.TotalPages > 1)
            {
                <div class="pagination-container mt-5">
                    <nav aria-label="Articles pagination">
                        <ul class="pagination justify-content-center">
                            <!-- Previous Page -->
                            @if (Model.HasPreviousPage)
                            {
                                var prevUrl = "/Articles?page=" + (Model.CurrentPage - 1) + (string.IsNullOrEmpty(Model.SelectedCategory) ? "" : "&category=" + Model.SelectedCategory);
                                <li class="page-item">
                                    <a class="page-link" href="@prevUrl" aria-label="Previous">
                                        <span aria-hidden="true">&laquo;</span>
                                    </a>
                                </li>
                            }
                            else
                            {
                                <li class="page-item disabled">
                                    <span class="page-link" aria-label="Previous">
                                        <span aria-hidden="true">&laquo;</span>
                                    </span>
                                </li>
                            }
                            
                            @{
                                var startPage = Math.Max(1, Model.CurrentPage - 2);
                                var endPage = Math.Min(Model.TotalPages, Model.CurrentPage + 2);
                                
                                // Adjust to show 5 pages when possible
                                if (endPage - startPage < 4)
                                {
                                    if (startPage == 1)
                                    {
                                        endPage = Math.Min(Model.TotalPages, startPage + 4);
                                    }
                                    else if (endPage == Model.TotalPages)
                                    {
                                        startPage = Math.Max(1, endPage - 4);
                                    }
                                }
                            }
                            
                            <!-- First page if not in range -->
                            @if (startPage > 1)
                            {
                                var firstUrl = "/Articles?page=1" + (string.IsNullOrEmpty(Model.SelectedCategory) ? "" : "&category=" + Model.SelectedCategory);
                                <li class="page-item">
                                    <a class="page-link" href="@firstUrl">1</a>
                                </li>
                                @if (startPage > 2)
                                {
                                    <li class="page-item disabled">
                                        <span class="page-link">...</span>
                                    </li>
                                }
                            }
                            
                            <!-- Page numbers -->
                            @for (var page = startPage; page <= endPage; page++)
                            {
                                var pageUrl = "/Articles?page=" + page + (string.IsNullOrEmpty(Model.SelectedCategory) ? "" : "&category=" + Model.SelectedCategory);
                                <li class="page-item @(page == Model.CurrentPage ? "active" : "")">
                                    <a class="page-link" href="@pageUrl">@(page)</a>
                                </li>
                            }
                            
                            <!-- Last page if not in range -->
                            @if (endPage < Model.TotalPages)
                            {
                                @if (endPage < Model.TotalPages - 1)
                                {
                                    <li class="page-item disabled">
                                        <span class="page-link">...</span>
                                    </li>
                                }
                                var lastUrl = "/Articles?page=" + Model.TotalPages + (string.IsNullOrEmpty(Model.SelectedCategory) ? "" : "&category=" + Model.SelectedCategory);
                                <li class="page-item">
                                    <a class="page-link" href="@lastUrl">@Model.TotalPages</a>
                                </li>
                            }
                            
                            <!-- Next Page -->
                            @if (Model.HasNextPage)
                            {
                                var nextUrl = "/Articles?page=" + (Model.CurrentPage + 1) + (string.IsNullOrEmpty(Model.SelectedCategory) ? "" : "&category=" + Model.SelectedCategory);
                                <li class="page-item">
                                    <a class="page-link" href="@nextUrl" aria-label="Next">
                                        <span aria-hidden="true">&raquo;</span>
                                    </a>
                                </li>
                            }
                            else
                            {
                                <li class="page-item disabled">
                                    <span class="page-link" aria-label="Next">
                                        <span aria-hidden="true">&raquo;</span>
                                    </span>
                                </li>
                            }
                        </ul>
                    </nav>
                    
                    <!-- Pagination Info -->
                    <div class="pagination-info text-center mt-3">
                        <small class="text-muted">
                            Showing @((Model.CurrentPage - 1) * Model.PageSize + 1) to @(Math.Min(Model.CurrentPage * Model.PageSize, Model.TotalArticles)) of @Model.TotalArticles articles
                        </small>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="empty-state">
                <div class="empty-icon">
                    <i class="bi bi-journal-text"></i>
                </div>
                <h3 class="empty-title">No articles found</h3>
                @if (!string.IsNullOrWhiteSpace(Model.SelectedCategory))
                {
                    <p class="empty-description">
                        No articles in this category yet. <a href="/Articles">View all</a>.
                    </p>
                }
                else
                {
                    <p class="empty-description">
                        No articles have been published yet. Check back soon for fresh insights and tutorials!
                    </p>
                }
            </div>
        }
    </div>
</section>

