@page
@model Mo.PersonalWebsite.Pages.Articles.ArticlesIndexModel
@{
    ViewData["Title"] = "Articles";
    ViewData["MetaDescription"] = "Browse through my latest articles and insights on software development, web technologies, and programming best practices.";
}

<!-- Modern Hero Section with Category Filter -->
<section class="py-4 py-md-5" style="background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);">
    <div class="container">
        <div class="row align-items-center">
            <div class="col-md-8">
                <h1 class="h2 fw-bold text-dark mb-2">Articles</h1>
                <p class="text-muted mb-0">
                    @Model.TotalArticles article@(Model.TotalArticles == 1 ? "" : "s") about software development, architecture, and technology trends.
                </p>
            </div>
            @if (Model.AllCategories.Any())
            {
                <div class="col-md-4 mt-3 mt-md-0">
                    <div class="d-flex justify-content-md-end">
                        <div class="dropdown">
                            <button class="btn btn-outline-primary dropdown-toggle px-4 py-2 rounded-pill" 
                                    type="button" 
                                    id="categoryDropdown" 
                                    data-bs-toggle="dropdown" 
                                    aria-expanded="false"
                                    style="min-width: 200px;">
                                <i class="bi bi-funnel me-2"></i>
                                @{
                                    var selectedCategoryName = string.IsNullOrWhiteSpace(Model.SelectedCategory) 
                                        ? "All Articles" 
                                        : Model.AllCategories.FirstOrDefault(c => c.Slug == Model.SelectedCategory)?.Name ?? "All Articles";
                                }
                                @selectedCategoryName
                            </button>
                            <ul class="dropdown-menu dropdown-menu-end shadow-lg border-0" 
                                aria-labelledby="categoryDropdown"
                                style="min-width: 250px; border-radius: 12px; overflow: hidden;">
                                <li>
                                    <a class="dropdown-item py-2 px-3 @(string.IsNullOrWhiteSpace(Model.SelectedCategory) ? "active" : "")" 
                                       href="/Articles">
                                        <i class="bi bi-grid-3x3-gap me-2"></i>
                                        All Articles
                                        <span class="badge bg-primary bg-opacity-20 text-primary ms-auto">@Model.TotalArticles</span>
                                    </a>
                                </li>
                                <li><hr class="dropdown-divider my-1"></li>
                                @foreach (var category in Model.AllCategories.Where(c => !string.IsNullOrEmpty(c.Slug)).OrderBy(c => c.Name))
                                {
                                    <li>
                                        <a class="dropdown-item py-2 px-3 @(Model.SelectedCategory == category.Slug ? "active" : "")" 
                                           href="/Articles?category=@category.Slug">
                                            <i class="bi bi-tag me-2"></i>
                                            @category.Name
                                            <span class="badge bg-secondary bg-opacity-20 text-secondary ms-auto">@category.Count</span>
                                        </a>
                                    </li>
                                }
                            </ul>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</section>

<!-- Articles Grid Section -->
<section class="py-4" style="background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);">
    <div class="container">
        @if (Model.Articles.Any())
        {
            <div class="row g-4 mb-4">
                @foreach (var article in Model.Articles)
                {
                    <div class="col-lg-4 col-md-6">
                        <article class="card border-0 shadow-sm h-100 article-card">
                            <!-- Article Image -->
                            <div class="article-image-container">
                                @{
                                    var imgMatch = System.Text.RegularExpressions.Regex.Match(article.Content ?? "", @"<img[^>]+src=[""']([^""']+)[""'][^>]*>");
                                    var imgUrl = imgMatch.Success ? imgMatch.Groups[1].Value : "/images/default-article.svg";
                                }
                                <img src="@imgUrl" 
                                     alt="@article.Title" 
                                     class="article-image"
                                     onerror="this.src='/images/default-article.svg'" />
                                
                                <!-- Category Badge Overlay -->
                                <div class="position-absolute top-0 start-0 m-3">
                                    @if (article.Category != null)
                                    {
                                        <a href="/Articles?category=@article.Category.Slug" class="badge rounded-pill text-decoration-none" style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; backdrop-filter: blur(10px);">
                                            @article.Category.Name
                                        </a>
                                    }
                                    else
                                    {
                                        <span class="badge bg-dark bg-opacity-75 text-white rounded-pill" style="backdrop-filter: blur(10px);">General</span>
                                    }
                                </div>
                            </div>
                            
                            <div class="card-body d-flex flex-column p-4">
                                <!-- Title -->
                                <h3 class="h5 mb-3 fw-bold">
                                    <a href="/Articles/@article.Slug" class="text-decoration-none text-dark stretched-link article-title">
                                        @article.Title
                                    </a>
                                </h3>
                                
                                <!-- Excerpt -->
                                <p class="text-muted mb-4 flex-grow-1" style="line-height: 1.6;">
                                    @{
                                        var excerpt = article.MetaDescription;
                                        if (string.IsNullOrEmpty(excerpt) && !string.IsNullOrEmpty(article.Content))
                                        {
                                            excerpt = System.Text.RegularExpressions.Regex.Replace(article.Content, "<.*?>", "");
                                            if (excerpt.Length > 120)
                                            {
                                                excerpt = excerpt.Substring(0, 120) + "...";
                                            }
                                        }
                                    }
                                    @(excerpt ?? "")
                                </p>
                                
                                <!-- Meta Info -->
                                <div class="d-flex align-items-center justify-content-between text-muted small">
                                    <div class="d-flex align-items-center">
                                        <i class="bi bi-calendar3 me-2 text-primary"></i>
                                        <span>@((article.PublishedAt ?? article.CreatedAt).ToString("MMM dd, yyyy"))</span>
                                    </div>
                                    <div class="d-flex align-items-center">
                                        <i class="bi bi-clock me-2 text-primary"></i>
                                        <span>
                                            @{
                                                var wordCount = article.Content?.Split(' ', StringSplitOptions.RemoveEmptyEntries).Length ?? 0;
                                                var readingTime = Math.Max(1, wordCount / 200);
                                            }
                                            @readingTime min read
                                        </span>
                                    </div>
                                </div>
                            </div>
                        </article>
                    </div>
                }
            </div>
            
            <!-- Modern Pagination -->
            @if (Model.TotalPages > 1)
            {
                <div class="d-flex justify-content-center">
                    <nav aria-label="Articles pagination">
                        <ul class="pagination pagination-lg">
                            <!-- Previous Page -->
                            @if (Model.HasPreviousPage)
                            {
                                var prevUrl = "/Articles?page=" + (Model.CurrentPage - 1) + (string.IsNullOrEmpty(Model.SelectedCategory) ? "" : "&category=" + Model.SelectedCategory);
                                <li class="page-item">
                                    <a class="page-link rounded-pill me-2" href="@prevUrl" aria-label="Previous">
                                        <i class="bi bi-chevron-left"></i>
                                    </a>
                                </li>
                            }
                            else
                            {
                                <li class="page-item disabled">
                                    <span class="page-link rounded-pill me-2" aria-label="Previous">
                                        <i class="bi bi-chevron-left"></i>
                                    </span>
                                </li>
                            }
                            
                            @{
                                var startPage = Math.Max(1, Model.CurrentPage - 2);
                                var endPage = Math.Min(Model.TotalPages, Model.CurrentPage + 2);
                                
                                // Adjust to show 5 pages when possible
                                if (endPage - startPage < 4)
                                {
                                    if (startPage == 1)
                                    {
                                        endPage = Math.Min(Model.TotalPages, startPage + 4);
                                    }
                                    else if (endPage == Model.TotalPages)
                                    {
                                        startPage = Math.Max(1, endPage - 4);
                                    }
                                }
                            }
                            
                            <!-- First page if not in range -->
                            @if (startPage > 1)
                            {
                                var firstUrl = "/Articles?page=1" + (string.IsNullOrEmpty(Model.SelectedCategory) ? "" : "&category=" + Model.SelectedCategory);
                                <li class="page-item">
                                    <a class="page-link rounded-pill mx-1" href="@firstUrl">1</a>
                                </li>
                                @if (startPage > 2)
                                {
                                    <li class="page-item disabled">
                                        <span class="page-link rounded-pill mx-1">...</span>
                                    </li>
                                }
                            }
                            
                            <!-- Page numbers -->
                            @for (var page = startPage; page <= endPage; page++)
                            {
                                var pageUrl = "/Articles?page=" + page + (string.IsNullOrEmpty(Model.SelectedCategory) ? "" : "&category=" + Model.SelectedCategory);
                                <li class="page-item">
                                    <a class="page-link rounded-pill mx-1 @(page == Model.CurrentPage ? "bg-primary text-white border-primary" : "")" href="@pageUrl">@(page)</a>
                                </li>
                            }
                            
                            <!-- Last page if not in range -->
                            @if (endPage < Model.TotalPages)
                            {
                                @if (endPage < Model.TotalPages - 1)
                                {
                                    <li class="page-item disabled">
                                        <span class="page-link rounded-pill mx-1">...</span>
                                    </li>
                                }
                                var lastUrl = "/Articles?page=" + Model.TotalPages + (string.IsNullOrEmpty(Model.SelectedCategory) ? "" : "&category=" + Model.SelectedCategory);
                                <li class="page-item">
                                    <a class="page-link rounded-pill mx-1" href="@lastUrl">@Model.TotalPages</a>
                                </li>
                            }
                            
                            <!-- Next Page -->
                            @if (Model.HasNextPage)
                            {
                                var nextUrl = "/Articles?page=" + (Model.CurrentPage + 1) + (string.IsNullOrEmpty(Model.SelectedCategory) ? "" : "&category=" + Model.SelectedCategory);
                                <li class="page-item">
                                    <a class="page-link rounded-pill ms-2" href="@nextUrl" aria-label="Next">
                                        <i class="bi bi-chevron-right"></i>
                                    </a>
                                </li>
                            }
                            else
                            {
                                <li class="page-item disabled">
                                    <span class="page-link rounded-pill ms-2" aria-label="Next">
                                        <i class="bi bi-chevron-right"></i>
                                    </span>
                                </li>
                            }
                        </ul>
                    </nav>
                </div>
                
                <!-- Pagination Info -->
                <div class="text-center mt-4">
                    <small class="text-muted">
                        Showing @((Model.CurrentPage - 1) * Model.PageSize + 1) to @(Math.Min(Model.CurrentPage * Model.PageSize, Model.TotalArticles)) of @Model.TotalArticles articles
                    </small>
                </div>
            }
        }
        else
        {
            <div class="text-center py-5">
                <div class="mb-4">
                    <i class="bi bi-journal-plus display-1 text-primary opacity-50"></i>
                </div>
                <h3 class="fw-bold text-dark mb-3">
                    @if (!string.IsNullOrWhiteSpace(Model.SelectedCategory))
                    {
                        <text>No articles in this category</text>
                    }
                    else
                    {
                        <text>No articles found</text>
                    }
                </h3>
                <p class="lead text-muted mb-4">
                    @if (!string.IsNullOrWhiteSpace(Model.SelectedCategory))
                    {
                        <text>Try exploring other categories or check back soon for new content.</text>
                    }
                    else
                    {
                        <text>Articles are coming soon! Check back for fresh insights and tutorials.</text>
                    }
                </p>
                @if (!string.IsNullOrWhiteSpace(Model.SelectedCategory))
                {
                    <a href="/Articles" class="btn btn-primary rounded-pill hover-lift">
                        <i class="bi bi-arrow-left me-2"></i>View All Articles
                    </a>
                }
            </div>
        }
    </div>
</section>

